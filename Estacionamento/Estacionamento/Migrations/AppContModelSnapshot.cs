// <auto-generated />
using System;
using Estacionamento.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Estacionamento.Migrations
{
    [DbContext(typeof(AppCont))]
    partial class AppContModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-preview.3.22175.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Estacionamento.Models.Proprietario", b =>
                {
                    b.Property<long?>("cod_prop")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("cod_prop"), 1L, 1);

                    b.Property<DateTime>("AnoNasc")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_Nasc");

                    b.Property<string>("CategoriaCnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cnh_categoria");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("cpf");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<string>("Rg")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)")
                        .HasColumnName("rg");

                    b.Property<string>("SobreNome")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("text")
                        .HasColumnName("sobrenome");

                    b.HasKey("cod_prop");

                    b.ToTable("tbl_proprietario");
                });

            modelBuilder.Entity("Estacionamento.Models.Veiculo", b =>
                {
                    b.Property<long?>("cod_veiculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("cod_veiculo"), 1L, 1);

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("corV");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("modeloV");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nomeV");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("placaV");

                    b.Property<long>("Proprietariocod_prop")
                        .HasColumnType("bigint");

                    b.Property<string>("TipoCombt")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("combustivel");

                    b.Property<long?>("cod_prop")
                        .HasColumnType("bigint");

                    b.HasKey("cod_veiculo");

                    b.HasIndex("Proprietariocod_prop");

                    b.ToTable("tbl_veiculo");
                });

            modelBuilder.Entity("Estacionamento.Models.Veiculo", b =>
                {
                    b.HasOne("Estacionamento.Models.Proprietario", "Proprietario")
                        .WithMany("Veiculos")
                        .HasForeignKey("Proprietariocod_prop")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proprietario");
                });

            modelBuilder.Entity("Estacionamento.Models.Proprietario", b =>
                {
                    b.Navigation("Veiculos");
                });
#pragma warning restore 612, 618
        }
    }
}
